name: CI/CD Pipeline for SIT722

on:
  push:
    branches:
      - testing
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: az acr login --name ${{ secrets.ACR_NAME }}

      # Build and push product_service image
      - name: Build and push product_service image
        run: |
          docker buildx build --file backend/product_service/Dockerfile --tag ${{ secrets.ACR_NAME }}.azurecr.io/product_service:latest --push backend/product_service

      # Build and push order_service image
      - name: Build and push order_service image
        run: |
          docker buildx build --file backend/order_service/Dockerfile --tag ${{ secrets.ACR_NAME }}.azurecr.io/order_service:latest --push backend/order_service

      # Build and push frontend image
      - name: Build and push frontend image
        run: |
          docker buildx build --file frontend/Dockerfile --tag ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest --push frontend

      # Run tests for Product Service
      - name: Run tests for Product Service
        run: |
          docker run --rm ${{ secrets.ACR_NAME }}.azurecr.io/product_service:latest pytest --maxfail=5 --disable-warnings -q
        continue-on-error: false

      # Run tests for Order Service
      - name: Run tests for Order Service
        run: |
          docker run --rm ${{ secrets.ACR_NAME }}.azurecr.io/order_service:latest pytest --maxfail=5 --disable-warnings -q
        continue-on-error: false

      # Run tests for Frontend Service
      - name: Run tests for Frontend Service
        run: |
          docker run --rm ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest pytest --maxfail=5 --disable-warnings -q
        continue-on-error: false

      - name: Logout Azure
        if: always()
        run: az logout

  staging-deployment:
    needs: ci-pipeline
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy to Staging Environment
        run: kubectl apply -f k8s/

      - name: Wait for Deployments to Complete
        run: |
          kubectl rollout status deployment/product-service
          kubectl rollout status deployment/order-service
          kubectl rollout status deployment/frontend

      - name: Run acceptance tests on staging
        run: echo "Add your acceptance tests here"

      - name: Cleanup staging environment
        run: kubectl delete -f k8s/

      - name: Logout Azure
        if: always()
        run: az logout

  production-deployment:
    needs: staging-deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy to Production Environment
        run: kubectl apply -f k8s/

      - name: Logout Azure
        if: always()
        run: az logout
